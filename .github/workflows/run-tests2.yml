name: run-tests2

on:
  push:
    paths:
      - '**.php'
      - '.github/workflows/run-tests2.yml'
      - 'phpunit.xml.dist'
      - 'composer.json'
      - 'composer.lock'
  pull_request:
    branches: [ "main" ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]
        php: [ 8.4, 8.3, 8.2 ]
        laravel: [ 12.*, 11.* ]
        stability: [ prefer-lowest, prefer-stable ]
        include:
          - laravel: 12.*
            testbench: 10.*
          - laravel: 11.*
            testbench: 9.*

    name: MySQL - P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: logiaudit
          MYSQL_PASSWORD: logiaudit
          MYSQL_USER: logiaudit
          MYSQL_DATABASE: logiaudit
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: logiaudit
      DB_USERNAME: logiaudit
      DB_PASSWORD: logiaudit
      DB_DRIVER: mysql
      CACHE_DRIVER: array
      SESSION_DRIVER: array
      QUEUE_DRIVER: database

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_mysql, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..10}; do
            nc -z 127.0.0.1 3306 && echo "MySQL is up!" && break
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Execute tests (MySQL)
        run: vendor/bin/pest --ci -c phpunit.mysql.xml
